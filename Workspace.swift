//
//  Workspace.swift
//  Tuist
//
//  Copyright (c) 2023 Bahadır A. Güder
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//

import ProjectDescription

// MARK: Workspace

let workspace = Workspace(
    name: "DeveloperSuite",
    projects: [
        .relativeToRoot("Sources/DeveloperSuite"),
        .relativeToRoot("Sources/DeveloperSuiteLogging"),
        .relativeToRoot("Sources/DeveloperSuitePersistence")
    ],
    schemes: [
        Scheme(
            name: "AllFrameworksWithTests",
            buildAction: .buildAction(
                targets: [
                    .project(
                        path: .relativeToRoot("Sources/DeveloperSuite"),
                        target: "DeveloperSuite"
                    ),
                    .project(
                        path: .relativeToRoot("Sources/DeveloperSuiteLogging"),
                        target: "DeveloperSuiteLogging"
                    ),
                    .project(
                        path: .relativeToRoot("Sources/DeveloperSuitePersistence"),
                        target: "DeveloperSuitePersistence"
                    )
                ]
            ),
            testAction: .targets([
                TestableTarget(target:
                    .project(path:
                        .relativeToRoot("Sources/DeveloperSuite"),
                        target: "DeveloperSuiteTests")
                ),
                TestableTarget(target:
                    .project(path:
                        .relativeToRoot("Sources/DeveloperSuiteLogging"),
                        target: "DeveloperSuiteLoggingTests")
                ),
                TestableTarget(target:
                    .project(path:
                        .relativeToRoot("Sources/DeveloperSuitePersistence"),
                        target: "DeveloperSuitePersistenceTests")
                )
            ])
        )
    ],
    additionalFiles: [
        .glob(pattern: .relativeToRoot("Package.swift"))
    ],
    generationOptions: .options(
        autogeneratedWorkspaceSchemes: .disabled
    )
)
